package models

type AutoGenerated struct {
	Data struct {
		Data struct {
			SearchDashClustersByAll struct {
				Type string `json:"$type"`
			} `json:"searchDashClustersByAll"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"data"`
	} `json:"data"`
	Included []struct {
		EntityUrn                  string        `json:"entityUrn"`
		RecipeTypes                []string      `json:"$recipeTypes"`
		Type                       string        `json:"$type"`
		Template                   string        `json:"template,omitempty"`
		ActorNavigationContext     interface{}   `json:"actorNavigationContext,omitempty"`
		BserpEntityNavigationalURL interface{}   `json:"bserpEntityNavigationalUrl,omitempty"`
		TrackingUrn                string        `json:"trackingUrn,omitempty"`
		ControlName                interface{}   `json:"controlName,omitempty"`
		InterstitialComponent      interface{}   `json:"interstitialComponent,omitempty"`
		PrimaryActions             []interface{} `json:"primaryActions,omitempty"`
		EntityCustomTrackingInfo   struct {
			MemberDistance                 string      `json:"memberDistance"`
			PrivacySettingsInjectionHolder interface{} `json:"privacySettingsInjectionHolder"`
			RecipeTypes                    []string    `json:"$recipeTypes"`
			NameMatch                      bool        `json:"nameMatch"`
			Type                           string      `json:"$type"`
		} `json:"entityCustomTrackingInfo,omitempty"`
		BadgeData interface{} `json:"badgeData,omitempty"`
		Title     struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"title,omitempty"`
		OverflowActions           []interface{} `json:"overflowActions,omitempty"`
		SearchActionType          interface{}   `json:"searchActionType,omitempty"`
		ActorInsights             []interface{} `json:"actorInsights,omitempty"`
		InsightsResolutionResults []interface{} `json:"insightsResolutionResults,omitempty"`
		BadgeIcon                 interface{}   `json:"badgeIcon,omitempty"`
		ShowAdditionalCluster     bool          `json:"showAdditionalCluster,omitempty"`
		RingStatus                interface{}   `json:"ringStatus,omitempty"`
		PrimarySubtitle           struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"primarySubtitle,omitempty"`
		BadgeText                interface{} `json:"badgeText,omitempty"`
		TrackingID               string      `json:"trackingId,omitempty"`
		ActorNavigationURL       interface{} `json:"actorNavigationUrl,omitempty"`
		AddEntityToSearchHistory bool        `json:"addEntityToSearchHistory,omitempty"`
		Summary                  interface{} `json:"summary,omitempty"`
		Image                    struct {
			Attributes []struct {
				ScalingType interface{} `json:"scalingType"`
				DetailData  struct {
					ProfilePictureWithoutFrame     interface{} `json:"profilePictureWithoutFrame"`
					ProfilePictureWithRingStatus   interface{} `json:"profilePictureWithRingStatus"`
					CompanyLogo                    interface{} `json:"companyLogo"`
					Icon                           interface{} `json:"icon"`
					SystemImage                    interface{} `json:"systemImage"`
					NonEntityGroupLogo             interface{} `json:"nonEntityGroupLogo"`
					VectorImage                    interface{} `json:"vectorImage"`
					NonEntityProfessionalEventLogo interface{} `json:"nonEntityProfessionalEventLogo"`
					ProfilePicture                 interface{} `json:"profilePicture"`
					ImageURL                       interface{} `json:"imageUrl"`
					ProfessionalEventLogo          interface{} `json:"professionalEventLogo"`
					NonEntityCompanyLogo           interface{} `json:"nonEntityCompanyLogo"`
					NonEntitySchoolLogo            interface{} `json:"nonEntitySchoolLogo"`
					GroupLogo                      interface{} `json:"groupLogo"`
					SchoolLogo                     interface{} `json:"schoolLogo"`
					GhostImage                     interface{} `json:"ghostImage"`
					NonEntityProfilePicture        struct {
						Profile     string      `json:"*profile"`
						RingStatus  interface{} `json:"ringStatus"`
						RecipeTypes []string    `json:"$recipeTypes"`
						VectorImage interface{} `json:"vectorImage"`
						Type        string      `json:"$type"`
					} `json:"nonEntityProfilePicture"`
				} `json:"detailData"`
				TintColor          interface{}   `json:"tintColor"`
				RecipeTypes        []string      `json:"$recipeTypes"`
				TapTargets         []interface{} `json:"tapTargets"`
				DisplayAspectRatio interface{}   `json:"displayAspectRatio"`
				Type               string        `json:"$type"`
			} `json:"attributes"`
			EditableAccessibilityText   bool          `json:"editableAccessibilityText"`
			ActionTarget                interface{}   `json:"actionTarget"`
			AccessibilityTextAttributes []interface{} `json:"accessibilityTextAttributes"`
			TotalCount                  interface{}   `json:"totalCount"`
			AccessibilityText           interface{}   `json:"accessibilityText"`
			RecipeTypes                 []string      `json:"$recipeTypes"`
			Type                        string        `json:"$type"`
		} `json:"image,omitempty"`
		LazyLoadedActions interface{} `json:"lazyLoadedActions,omitempty"`
		SecondarySubtitle struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"secondarySubtitle,omitempty"`
		EntityEmbeddedObject   interface{} `json:"entityEmbeddedObject,omitempty"`
		NavigationURL          interface{} `json:"navigationUrl,omitempty"`
		UnreadIndicatorDetails interface{} `json:"unreadIndicatorDetails,omitempty"`
		Target                 interface{} `json:"target,omitempty"`
		ActorTrackingUrn       interface{} `json:"actorTrackingUrn,omitempty"`
		NavigationContext      interface{} `json:"navigationContext,omitempty"`
	} `json:"included"`
}

type Profile struct {
	Data struct {
		BirthDateOn                 any    `json:"birthDateOn"`
		MultiLocalePhoneticLastName any    `json:"multiLocalePhoneticLastName"`
		IndustryV2Urn               any    `json:"industryV2Urn"`
		ObjectUrn                   string `json:"objectUrn"`
		MultiLocaleLastName         struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleLastName"`
		PronounUnion                          any `json:"pronounUnion"`
		MultiLocaleFirstNamePronunciationHint struct {
		} `json:"multiLocaleFirstNamePronunciationHint"`
		MultiLocaleLastNamePronunciationHint struct {
		} `json:"multiLocaleLastNamePronunciationHint"`
		TempStatusExpiredAtUnion any `json:"tempStatusExpiredAtUnion"`
		MultiLocaleFirstName     struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleFirstName"`
		MultiLocaleTempStatus            any    `json:"multiLocaleTempStatus"`
		ContentRestrictedAnnotation      any    `json:"contentRestrictedAnnotation"`
		CompanyNameOnProfileTopCardShown bool   `json:"companyNameOnProfileTopCardShown"`
		State                            any    `json:"state"`
		PublicIdentifier                 string `json:"publicIdentifier"`
		TrackingID                       string `json:"trackingId"`
		PhoneticFirstName                any    `json:"phoneticFirstName"`
		MultiLocaleSummary               any    `json:"multiLocaleSummary"`
		FirstNamePronunciationHint       any    `json:"firstNamePronunciationHint"`
		LastNamePronunciationHint        any    `json:"lastNamePronunciationHint"`
		VersionTag                       string `json:"versionTag"`
		FirstName                        string `json:"firstName"`
		ProfilePicture                   struct {
			A11YText    string   `json:"a11yText"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"profilePicture"`
		MultiLocaleMaidenName any `json:"multiLocaleMaidenName"`
		MultiLocaleHeadline   struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleHeadline"`
		LastName                              string `json:"lastName"`
		Memorialized                          bool   `json:"memorialized"`
		MultiLocalePhoneticFirstName          any    `json:"multiLocalePhoneticFirstName"`
		VolunteerCauses                       any    `json:"volunteerCauses"`
		Industry                              string `json:"*industry"`
		ShowPremiumSubscriberBadge            bool   `json:"showPremiumSubscriberBadge"`
		TempStatusEmoji                       any    `json:"tempStatusEmoji"`
		MaidenName                            any    `json:"maidenName"`
		GeoLocationBackfilled                 bool   `json:"geoLocationBackfilled"`
		MultiLocaleFullNamePronunciationAudio struct {
		} `json:"multiLocaleFullNamePronunciationAudio"`
		PhoneticLastName           any    `json:"phoneticLastName"`
		Premium                    bool   `json:"premium"`
		EntityUrn                  string `json:"entityUrn"`
		Headline                   string `json:"headline"`
		FullNamePronunciationAudio any    `json:"fullNamePronunciationAudio"`
		Summary                    any    `json:"summary"`
		SupportedLocales           []struct {
			Country     string   `json:"country"`
			Language    string   `json:"language"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"supportedLocales"`
		LocationName                   any      `json:"locationName"`
		Address                        any      `json:"address"`
		MultiLocaleAddress             any      `json:"multiLocaleAddress"`
		EducationOnProfileTopCardShown bool     `json:"educationOnProfileTopCardShown"`
		IndustryUrn                    string   `json:"industryUrn"`
		RecipeTypes                    []string `json:"$recipeTypes"`
		Type                           string   `json:"$type"`
		GeoLocation                    struct {
			Geo         string   `json:"*geo"`
			RecipeTypes []string `json:"$recipeTypes"`
			GeoUrn      string   `json:"geoUrn"`
			Type        string   `json:"$type"`
		} `json:"geoLocation"`
		TempStatus                  any    `json:"tempStatus"`
		ProfileTreasuryMediaProfile string `json:"*profileTreasuryMediaProfile"`
		Location                    struct {
			RecipeTypes []string `json:"$recipeTypes"`
			CountryCode string   `json:"countryCode"`
			Type        string   `json:"$type"`
		} `json:"location"`
		PrimaryLocale struct {
			Country     string   `json:"country"`
			Language    string   `json:"language"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"primaryLocale"`
		BackgroundPicture any `json:"backgroundPicture"`
	} `json:"data"`
	Included []struct {
		Paging struct {
			Total       int      `json:"total"`
			Start       int      `json:"start"`
			Count       int      `json:"count"`
			Links       []any    `json:"links"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"paging,omitempty"`
		EntityUrn                              string   `json:"entityUrn"`
		RecipeTypes                            []string `json:"$recipeTypes"`
		Elements                               []any    `json:"elements,omitempty"`
		Type                                   string   `json:"$type"`
		CountryUrn                             any      `json:"countryUrn,omitempty"`
		DefaultLocalizedNameWithoutCountryName string   `json:"defaultLocalizedNameWithoutCountryName,omitempty"`
		DefaultLocalizedName                   string   `json:"defaultLocalizedName,omitempty"`
		Name                                   string   `json:"name,omitempty"`
	} `json:"included"`
}

type ProfileRes struct {
	FullName   string `json:"fullName"`
	LastName   string `json:"lastName"`
	Position   string `json:"position"`
	ProfileURN string `json:"profileURN"`
}
