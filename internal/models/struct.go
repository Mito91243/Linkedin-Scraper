package models

type AutoGenerated struct {
	Data struct {
		Data struct {
			SearchDashClustersByAll struct {
				Type string `json:"$type"`
			} `json:"searchDashClustersByAll"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"data"`
	} `json:"data"`
	Included []struct {
		EntityUrn                  string        `json:"entityUrn"`
		RecipeTypes                []string      `json:"$recipeTypes"`
		Type                       string        `json:"$type"`
		Template                   string        `json:"template,omitempty"`
		ActorNavigationContext     interface{}   `json:"actorNavigationContext,omitempty"`
		BserpEntityNavigationalURL interface{}   `json:"bserpEntityNavigationalUrl,omitempty"`
		TrackingUrn                string        `json:"trackingUrn,omitempty"`
		ControlName                interface{}   `json:"controlName,omitempty"`
		InterstitialComponent      interface{}   `json:"interstitialComponent,omitempty"`
		PrimaryActions             []interface{} `json:"primaryActions,omitempty"`
		EntityCustomTrackingInfo   struct {
			MemberDistance                 string      `json:"memberDistance"`
			PrivacySettingsInjectionHolder interface{} `json:"privacySettingsInjectionHolder"`
			RecipeTypes                    []string    `json:"$recipeTypes"`
			NameMatch                      bool        `json:"nameMatch"`
			Type                           string      `json:"$type"`
		} `json:"entityCustomTrackingInfo,omitempty"`
		BadgeData interface{} `json:"badgeData,omitempty"`
		Title     struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"title,omitempty"`
		OverflowActions           []interface{} `json:"overflowActions,omitempty"`
		SearchActionType          interface{}   `json:"searchActionType,omitempty"`
		ActorInsights             []interface{} `json:"actorInsights,omitempty"`
		InsightsResolutionResults []interface{} `json:"insightsResolutionResults,omitempty"`
		BadgeIcon                 interface{}   `json:"badgeIcon,omitempty"`
		ShowAdditionalCluster     bool          `json:"showAdditionalCluster,omitempty"`
		RingStatus                interface{}   `json:"ringStatus,omitempty"`
		PrimarySubtitle           struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"primarySubtitle,omitempty"`
		BadgeText                interface{} `json:"badgeText,omitempty"`
		TrackingID               string      `json:"trackingId,omitempty"`
		ActorNavigationURL       interface{} `json:"actorNavigationUrl,omitempty"`
		AddEntityToSearchHistory bool        `json:"addEntityToSearchHistory,omitempty"`
		Summary                  interface{} `json:"summary,omitempty"`
		Image                    struct {
			Attributes []struct {
				ScalingType interface{} `json:"scalingType"`
				DetailData  struct {
					ProfilePictureWithoutFrame     interface{} `json:"profilePictureWithoutFrame"`
					ProfilePictureWithRingStatus   interface{} `json:"profilePictureWithRingStatus"`
					CompanyLogo                    interface{} `json:"companyLogo"`
					Icon                           interface{} `json:"icon"`
					SystemImage                    interface{} `json:"systemImage"`
					NonEntityGroupLogo             interface{} `json:"nonEntityGroupLogo"`
					VectorImage                    interface{} `json:"vectorImage"`
					NonEntityProfessionalEventLogo interface{} `json:"nonEntityProfessionalEventLogo"`
					ProfilePicture                 interface{} `json:"profilePicture"`
					ImageURL                       interface{} `json:"imageUrl"`
					ProfessionalEventLogo          interface{} `json:"professionalEventLogo"`
					NonEntityCompanyLogo           interface{} `json:"nonEntityCompanyLogo"`
					NonEntitySchoolLogo            interface{} `json:"nonEntitySchoolLogo"`
					GroupLogo                      interface{} `json:"groupLogo"`
					SchoolLogo                     interface{} `json:"schoolLogo"`
					GhostImage                     interface{} `json:"ghostImage"`
					NonEntityProfilePicture        struct {
						Profile     string      `json:"*profile"`
						RingStatus  interface{} `json:"ringStatus"`
						RecipeTypes []string    `json:"$recipeTypes"`
						VectorImage interface{} `json:"vectorImage"`
						Type        string      `json:"$type"`
					} `json:"nonEntityProfilePicture"`
				} `json:"detailData"`
				TintColor          interface{}   `json:"tintColor"`
				RecipeTypes        []string      `json:"$recipeTypes"`
				TapTargets         []interface{} `json:"tapTargets"`
				DisplayAspectRatio interface{}   `json:"displayAspectRatio"`
				Type               string        `json:"$type"`
			} `json:"attributes"`
			EditableAccessibilityText   bool          `json:"editableAccessibilityText"`
			ActionTarget                interface{}   `json:"actionTarget"`
			AccessibilityTextAttributes []interface{} `json:"accessibilityTextAttributes"`
			TotalCount                  interface{}   `json:"totalCount"`
			AccessibilityText           interface{}   `json:"accessibilityText"`
			RecipeTypes                 []string      `json:"$recipeTypes"`
			Type                        string        `json:"$type"`
		} `json:"image,omitempty"`
		LazyLoadedActions interface{} `json:"lazyLoadedActions,omitempty"`
		SecondarySubtitle struct {
			TextDirection                 string        `json:"textDirection"`
			Text                          string        `json:"text"`
			AttributesV2                  []interface{} `json:"attributesV2"`
			AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
			AccessibilityText             interface{}   `json:"accessibilityText"`
			RecipeTypes                   []string      `json:"$recipeTypes"`
			Type                          string        `json:"$type"`
		} `json:"secondarySubtitle,omitempty"`
		EntityEmbeddedObject   interface{} `json:"entityEmbeddedObject,omitempty"`
		NavigationURL          interface{} `json:"navigationUrl,omitempty"`
		UnreadIndicatorDetails interface{} `json:"unreadIndicatorDetails,omitempty"`
		Target                 interface{} `json:"target,omitempty"`
		ActorTrackingUrn       interface{} `json:"actorTrackingUrn,omitempty"`
		NavigationContext      interface{} `json:"navigationContext,omitempty"`
	} `json:"included"`
}

type Profile struct {
	Data struct {
		BirthDateOn                 any    `json:"birthDateOn"`
		MultiLocalePhoneticLastName any    `json:"multiLocalePhoneticLastName"`
		IndustryV2Urn               any    `json:"industryV2Urn"`
		ObjectUrn                   string `json:"objectUrn"`
		MultiLocaleLastName         struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleLastName"`
		PronounUnion                          any `json:"pronounUnion"`
		MultiLocaleFirstNamePronunciationHint struct {
		} `json:"multiLocaleFirstNamePronunciationHint"`
		MultiLocaleLastNamePronunciationHint struct {
		} `json:"multiLocaleLastNamePronunciationHint"`
		TempStatusExpiredAtUnion any `json:"tempStatusExpiredAtUnion"`
		MultiLocaleFirstName     struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleFirstName"`
		MultiLocaleTempStatus            any    `json:"multiLocaleTempStatus"`
		ContentRestrictedAnnotation      any    `json:"contentRestrictedAnnotation"`
		CompanyNameOnProfileTopCardShown bool   `json:"companyNameOnProfileTopCardShown"`
		State                            any    `json:"state"`
		PublicIdentifier                 string `json:"publicIdentifier"`
		TrackingID                       string `json:"trackingId"`
		PhoneticFirstName                any    `json:"phoneticFirstName"`
		MultiLocaleSummary               any    `json:"multiLocaleSummary"`
		FirstNamePronunciationHint       any    `json:"firstNamePronunciationHint"`
		LastNamePronunciationHint        any    `json:"lastNamePronunciationHint"`
		VersionTag                       string `json:"versionTag"`
		FirstName                        string `json:"firstName"`
		ProfilePicture                   struct {
			A11YText    string   `json:"a11yText"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"profilePicture"`
		MultiLocaleMaidenName any `json:"multiLocaleMaidenName"`
		MultiLocaleHeadline   struct {
			EnUS string `json:"en_US"`
		} `json:"multiLocaleHeadline"`
		LastName                              string `json:"lastName"`
		Memorialized                          bool   `json:"memorialized"`
		MultiLocalePhoneticFirstName          any    `json:"multiLocalePhoneticFirstName"`
		VolunteerCauses                       any    `json:"volunteerCauses"`
		Industry                              string `json:"*industry"`
		ShowPremiumSubscriberBadge            bool   `json:"showPremiumSubscriberBadge"`
		TempStatusEmoji                       any    `json:"tempStatusEmoji"`
		MaidenName                            any    `json:"maidenName"`
		GeoLocationBackfilled                 bool   `json:"geoLocationBackfilled"`
		MultiLocaleFullNamePronunciationAudio struct {
		} `json:"multiLocaleFullNamePronunciationAudio"`
		PhoneticLastName           any    `json:"phoneticLastName"`
		Premium                    bool   `json:"premium"`
		EntityUrn                  string `json:"entityUrn"`
		Headline                   string `json:"headline"`
		FullNamePronunciationAudio any    `json:"fullNamePronunciationAudio"`
		Summary                    any    `json:"summary"`
		SupportedLocales           []struct {
			Country     string   `json:"country"`
			Language    string   `json:"language"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"supportedLocales"`
		LocationName                   any      `json:"locationName"`
		Address                        any      `json:"address"`
		MultiLocaleAddress             any      `json:"multiLocaleAddress"`
		EducationOnProfileTopCardShown bool     `json:"educationOnProfileTopCardShown"`
		IndustryUrn                    string   `json:"industryUrn"`
		RecipeTypes                    []string `json:"$recipeTypes"`
		Type                           string   `json:"$type"`
		GeoLocation                    struct {
			Geo         string   `json:"*geo"`
			RecipeTypes []string `json:"$recipeTypes"`
			GeoUrn      string   `json:"geoUrn"`
			Type        string   `json:"$type"`
		} `json:"geoLocation"`
		TempStatus                  any    `json:"tempStatus"`
		ProfileTreasuryMediaProfile string `json:"*profileTreasuryMediaProfile"`
		Location                    struct {
			RecipeTypes []string `json:"$recipeTypes"`
			CountryCode string   `json:"countryCode"`
			Type        string   `json:"$type"`
		} `json:"location"`
		PrimaryLocale struct {
			Country     string   `json:"country"`
			Language    string   `json:"language"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"primaryLocale"`
		BackgroundPicture any `json:"backgroundPicture"`
	} `json:"data"`
	Included []struct {
		Paging struct {
			Total       int      `json:"total"`
			Start       int      `json:"start"`
			Count       int      `json:"count"`
			Links       []any    `json:"links"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"paging,omitempty"`
		EntityUrn                              string   `json:"entityUrn"`
		RecipeTypes                            []string `json:"$recipeTypes"`
		Elements                               []any    `json:"elements,omitempty"`
		Type                                   string   `json:"$type"`
		CountryUrn                             any      `json:"countryUrn,omitempty"`
		DefaultLocalizedNameWithoutCountryName string   `json:"defaultLocalizedNameWithoutCountryName,omitempty"`
		DefaultLocalizedName                   string   `json:"defaultLocalizedName,omitempty"`
		Name                                   string   `json:"name,omitempty"`
	} `json:"included"`
}

type Response struct {
	Data struct {
		Included []struct {
			EntityUrn string `json:"entityUrn"`
		} `json:"included"`
	} `json:"data"`
}

type ProfileRes struct {
	FullName   string `json:"fullName"`
	LastName   string `json:"lastName"`
	Position   string `json:"position"`
	ProfileURN string `json:"profileURN"`
	Link       string `json:"bserpEntityNavigationalUrl"`
}

type PostRes struct {
	Text         string `json:"text"`
	Name         string `json:"name"`
	ActionTarget string `json:"actionTarget"`
	URN          string `json:"urn"`
	NumLikes     int    `json:"numLikes"`
	NumComments  int    `json:"numComments"`
	Date         string `json:"date"` // Changed to string
}

type SocialCounts struct {
	NumLikes    int
	NumComments int
}
type Post struct {
	Data struct {
		Data struct {
			SearchDashClustersByAll struct {
				Metadata struct {
					EntityResultAttributes  interface{} `json:"entityResultAttributes"`
					TotalResultCount        int         `json:"totalResultCount"`
					SearchAlert             interface{} `json:"searchAlert"`
					SecondaryFilterCluster  interface{} `json:"secondaryFilterCluster"`
					RecipeTypes             []string    `json:"$recipeTypes"`
					LazyRightRail           interface{} `json:"lazyRightRail"`
					QueryType               string      `json:"queryType"`
					Type                    string      `json:"$type"`
					PrimaryResultType       string      `json:"primaryResultType"`
					PaginationToken         interface{} `json:"paginationToken"`
					PrimaryFilterCluster    interface{} `json:"primaryFilterCluster"`
					BlockedQuery            bool        `json:"blockedQuery"`
					EntityActionButtonStyle interface{} `json:"entityActionButtonStyle"`
					SearchID                string      `json:"searchId"`
					FilterAppliedCount      int         `json:"filterAppliedCount"`
					ClusterTitleFontSize    interface{} `json:"clusterTitleFontSize"`
					SimpleInsightAttributes interface{} `json:"simpleInsightAttributes"`
					KnowledgeCardRightRail  interface{} `json:"knowledgeCardRightRail"`
				} `json:"metadata"`
				Paging struct {
					Count       int      `json:"count"`
					Start       int      `json:"start"`
					Total       int      `json:"total"`
					RecipeTypes []string `json:"$recipeTypes"`
					Type        string   `json:"$type"`
				} `json:"paging"`
				RecipeTypes []string `json:"$recipeTypes"`
				Elements    []struct {
					Image                interface{}   `json:"image"`
					QuickFilterActions   []interface{} `json:"quickFilterActions"`
					ClusterRenderType    string        `json:"clusterRenderType"`
					Dismissable          bool          `json:"dismissable"`
					TotalResultCount     interface{}   `json:"totalResultCount"`
					ControlName          interface{}   `json:"controlName"`
					Description          interface{}   `json:"description"`
					Title                interface{}   `json:"title"`
					RecipeTypes          []string      `json:"$recipeTypes"`
					Type                 string        `json:"$type"`
					ActionTypeName       interface{}   `json:"actionTypeName"`
					NavigationText       interface{}   `json:"navigationText"`
					Feature              interface{}   `json:"feature"`
					NavigationCardAction interface{}   `json:"navigationCardAction"`
					Position             int           `json:"position"`
					Items                []struct {
						Item struct {
							EntityResult           interface{} `json:"entityResult"`
							Cluster                interface{} `json:"cluster"`
							FifComponentCard       interface{} `json:"fifComponentCard"`
							BannerCard             interface{} `json:"bannerCard"`
							SearchAlert            interface{} `json:"searchAlert"`
							UpsellSlot             interface{} `json:"upsellSlot"`
							CoachRealtimeResponse  interface{} `json:"coachRealtimeResponse"`
							SearchSuggestionCard   interface{} `json:"searchSuggestionCard"`
							CoachPromptCluster     interface{} `json:"coachPromptCluster"`
							FeedbackCard           interface{} `json:"feedbackCard"`
							KnowledgeCardV2        interface{} `json:"knowledgeCardV2"`
							KeywordsSuggestionCard interface{} `json:"keywordsSuggestionCard"`
							QueryClarificationCard interface{} `json:"queryClarificationCard"`
							TopicalQuestionCard    interface{} `json:"topicalQuestionCard"`
							SimpleTextV2           interface{} `json:"simpleTextV2"`
							PromoCard              interface{} `json:"promoCard"`
							SearchFeedUpdate       struct {
								RecipeTypes []string `json:"$recipeTypes"`
								Update      string   `json:"*update"`
								TrackingID  string   `json:"trackingId"`
								Type        string   `json:"$type"`
							} `json:"searchFeedUpdate"`
							SearchQuestionAndAnswerCard interface{} `json:"searchQuestionAndAnswerCard"`
							CenteredText                interface{} `json:"centeredText"`
							SimpleImage                 interface{} `json:"simpleImage"`
						} `json:"item"`
						Position    int      `json:"position"`
						RecipeTypes []string `json:"$recipeTypes"`
						Type        string   `json:"$type"`
					} `json:"items"`
					Results    []interface{} `json:"results"`
					TrackingID string        `json:"trackingId"`
				} `json:"elements"`
				Type string `json:"$type"`
			} `json:"searchDashClustersByAll"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"data"`
	} `json:"data"`
	Included []struct {
		FolloweeCount               interface{} `json:"followeeCount,omitempty"`
		EntityUrn                   string      `json:"entityUrn"`
		PreDashFollowingInfoUrn     string      `json:"preDashFollowingInfoUrn,omitempty"`
		Following                   bool        `json:"following,omitempty"`
		TrackingUrn                 string      `json:"trackingUrn,omitempty"`
		FollowingType               string      `json:"followingType,omitempty"`
		FollowerCount               interface{} `json:"followerCount,omitempty"`
		RecipeTypes                 []string    `json:"$recipeTypes"`
		Type                        string      `json:"$type"`
		ActionTarget                string      `json:"actionTarget,omitempty"`
		ReactionByOrganizationActor interface{} `json:"reactionByOrganizationActor,omitempty"`
		NumLikes                    int         `json:"numLikes,omitempty"`
		Liked                       bool        `json:"liked,omitempty"`
		Urn                         string      `json:"urn,omitempty"`
		NumComments                 int         `json:"numComments,omitempty"`
		HighlightedReactorName      interface{} `json:"highlightedReactorName,omitempty"`
		ReactionTypeCounts          []struct {
			Count        int      `json:"count"`
			ReactionType string   `json:"reactionType"`
			RecipeTypes  []string `json:"$recipeTypes"`
			Type         string   `json:"$type"`
		} `json:"reactionTypeCounts,omitempty"`
		NumShares        int         `json:"numShares,omitempty"`
		NumImpressions   interface{} `json:"numImpressions,omitempty"`
		Reacted          interface{} `json:"reacted,omitempty"`
		PreDashEntityUrn string      `json:"preDashEntityUrn,omitempty"`
		Metadata         struct {
			ActionsPosition      string      `json:"actionsPosition"`
			ShareMediaUrn        interface{} `json:"shareMediaUrn"`
			ActionTriggerEnabled bool        `json:"actionTriggerEnabled"`
			CoachSummaryText     interface{} `json:"coachSummaryText"`
			ShareAudience        string      `json:"shareAudience"`
			LegoTrackingToken    interface{} `json:"legoTrackingToken"`
			BackendUrn           string      `json:"backendUrn"`
			CoachSummaryUrn      interface{} `json:"coachSummaryUrn"`
			RecipeTypes          []string    `json:"$recipeTypes"`
			TrackingData         struct {
				SponsoredTracking interface{} `json:"sponsoredTracking"`
				RequestID         string      `json:"requestId"`
				BackendUrn        interface{} `json:"backendUrn"`
				RecipeTypes       []string    `json:"$recipeTypes"`
				TrackingID        string      `json:"trackingId"`
				Type              string      `json:"$type"`
			} `json:"trackingData"`
			Type                          string      `json:"$type"`
			UpdateActions                 string      `json:"*updateActions"`
			DetailPageType                string      `json:"detailPageType"`
			ShouldForceRefetchFromNetwork bool        `json:"shouldForceRefetchFromNetwork"`
			ShareUrn                      string      `json:"shareUrn"`
			ExcludedFromSeen              bool        `json:"excludedFromSeen"`
			CoachAction                   interface{} `json:"coachAction"`
			RootShare                     bool        `json:"rootShare"`
			HidePostAction                interface{} `json:"hidePostAction"`
			Group                         interface{} `json:"group"`
		} `json:"metadata,omitempty"`
		SocialContent struct {
			UpdateSaveState            interface{} `json:"updateSaveState"`
			HideCommentsCount          bool        `json:"hideCommentsCount"`
			HideReactionsCount         bool        `json:"hideReactionsCount"`
			HideSocialActivityCounts   bool        `json:"hideSocialActivityCounts"`
			HideShareAction            bool        `json:"hideShareAction"`
			HideSendAction             bool        `json:"hideSendAction"`
			RecipeTypes                []string    `json:"$recipeTypes"`
			HideRepostsCount           bool        `json:"hideRepostsCount"`
			Type                       string      `json:"$type"`
			HideViewsCount             bool        `json:"hideViewsCount"`
			HideReactAction            bool        `json:"hideReactAction"`
			CoachAction                interface{} `json:"coachAction"`
			HideCommentAction          bool        `json:"hideCommentAction"`
			ShareURL                   string      `json:"shareUrl"`
			ShowContributionExperience bool        `json:"showContributionExperience"`
		} `json:"socialContent,omitempty"`
		ShowSocialDetail bool        `json:"showSocialDetail,omitempty"`
		Footer           interface{} `json:"footer,omitempty"`
		DebugInfo        interface{} `json:"debugInfo,omitempty"`
		CarouselContent  interface{} `json:"carouselContent,omitempty"`
		Content          struct {
			ToggleButtonComponent interface{} `json:"toggleButtonComponent"`
			FeedDividerComponent  interface{} `json:"feedDividerComponent"`
			ArticleComponent      struct {
				HeadlineBackgroundColor     string      `json:"headlineBackgroundColor"`
				NewsletterNavigationContext interface{} `json:"newsletterNavigationContext"`
				LargeImage                  interface{} `json:"largeImage"`
				SmallImage                  interface{} `json:"smallImage"`
				Subdescription              interface{} `json:"subdescription"`
				Description                 interface{} `json:"description"`
				Title                       struct {
					TextDirection                 string        `json:"textDirection"`
					Text                          string        `json:"text"`
					AttributesV2                  []interface{} `json:"attributesV2"`
					AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
					AccessibilityText             interface{}   `json:"accessibilityText"`
					RecipeTypes                   []string      `json:"$recipeTypes"`
					Type                          string        `json:"$type"`
				} `json:"title"`
				ArticleUrn           string      `json:"articleUrn"`
				AnimatedOverlay      interface{} `json:"animatedOverlay"`
				SwapTitleAndSubtitle bool        `json:"swapTitleAndSubtitle"`
				ShowChevron          bool        `json:"showChevron"`
				SubscribeAction      interface{} `json:"subscribeAction"`
				ShowSmallTitle       bool        `json:"showSmallTitle"`
				Byline               interface{} `json:"byline"`
				InlineCta            interface{} `json:"inlineCta"`
				BylineImage          interface{} `json:"bylineImage"`
				NewsletterLogo       interface{} `json:"newsletterLogo"`
				RecipeTypes          []string    `json:"$recipeTypes"`
				Type                 string      `json:"$type"`
				NewsletterTitle      interface{} `json:"newsletterTitle"`
				Subtitle             struct {
					TextDirection                 string        `json:"textDirection"`
					Text                          string        `json:"text"`
					AttributesV2                  []interface{} `json:"attributesV2"`
					AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
					AccessibilityText             interface{}   `json:"accessibilityText"`
					RecipeTypes                   []string      `json:"$recipeTypes"`
					Type                          string        `json:"$type"`
				} `json:"subtitle"`
				NavigationContext struct {
					ActionTarget           string      `json:"actionTarget"`
					URLViewingBehavior     string      `json:"urlViewingBehavior"`
					TrackingActionType     string      `json:"trackingActionType"`
					AccessibilityText      string      `json:"accessibilityText"`
					SponsoredURLAttributes interface{} `json:"sponsoredUrlAttributes"`
					RecipeTypes            []string    `json:"$recipeTypes"`
					Type                   string      `json:"$type"`
				} `json:"navigationContext"`
			} `json:"articleComponent"`
			EventComponent                  interface{} `json:"eventComponent"`
			ConversationsComponent          interface{} `json:"conversationsComponent"`
			PromoComponent                  interface{} `json:"promoComponent"`
			SeeMoreComponent                interface{} `json:"seeMoreComponent"`
			ReviewComponent                 interface{} `json:"reviewComponent"`
			FeedDiscoveryGridComponent      interface{} `json:"feedDiscoveryGridComponent"`
			GentlePromptComponent           interface{} `json:"gentlePromptComponent"`
			FollowPromptComponent           interface{} `json:"followPromptComponent"`
			JobComponent                    interface{} `json:"jobComponent"`
			LearningRecommendationComponent interface{} `json:"learningRecommendationComponent"`
			MiniUpdateContentComponent      interface{} `json:"miniUpdateContentComponent"`
			ButtonComponent                 interface{} `json:"buttonComponent"`
			SurveyComponent                 interface{} `json:"surveyComponent"`
			ActorComponent                  interface{} `json:"actorComponent"`
			CelebrationComponent            interface{} `json:"celebrationComponent"`
			DocumentComponent               interface{} `json:"documentComponent"`
			CreationStatusComponent         interface{} `json:"creationStatusComponent"`
			DynamicPollComponent            interface{} `json:"dynamicPollComponent"`
			NewsletterComponent             interface{} `json:"newsletterComponent"`
			PostCtaComponent                interface{} `json:"postCtaComponent"`
			ScheduledLiveContentComponent   interface{} `json:"scheduledLiveContentComponent"`
			EntityComponent                 interface{} `json:"entityComponent"`
			ExternalVideoComponent          interface{} `json:"externalVideoComponent"`
			LinkedInVideoComponent          interface{} `json:"linkedInVideoComponent"`
			TextOverlayImageComponent       interface{} `json:"textOverlayImageComponent"`
			AnnotationComponent             interface{} `json:"annotationComponent"`
			DetailedSurveyComponent         interface{} `json:"detailedSurveyComponent"`
			ImageComponent                  interface{} `json:"imageComponent"`
			ShowcaseComponent               interface{} `json:"showcaseComponent"`
			PollComponent                   interface{} `json:"pollComponent"`
			FeedDiscoveryEntityComponent    interface{} `json:"feedDiscoveryEntityComponent"`
			PromptComponent                 interface{} `json:"promptComponent"`
			ContextualActionComponent       interface{} `json:"contextualActionComponent"`
			AnnouncementComponent           interface{} `json:"announcementComponent"`
			CommentaryComponent             interface{} `json:"commentaryComponent"`
			MiniUpdateCommentaryComponent   interface{} `json:"miniUpdateCommentaryComponent"`
			SlideshowComponent              interface{} `json:"slideshowComponent"`
			CallToActionComponent           interface{} `json:"callToActionComponent"`
		} `json:"content,omitempty"`
		Attachment            interface{} `json:"attachment,omitempty"`
		DetailHeader          interface{} `json:"detailHeader,omitempty"`
		LeadGenFormContent    interface{} `json:"leadGenFormContent,omitempty"`
		Annotation            interface{} `json:"annotation,omitempty"`
		ContextualHeader      interface{} `json:"contextualHeader,omitempty"`
		ResharedUpdate        interface{} `json:"resharedUpdate,omitempty"`
		Interstitial          interface{} `json:"interstitial,omitempty"`
		AggregatedContent     interface{} `json:"aggregatedContent,omitempty"`
		ContextualDescription interface{} `json:"contextualDescription,omitempty"`
		Actor                 struct {
			Image struct {
				Attributes []struct {
					ScalingType interface{} `json:"scalingType"`
					DetailData  struct {
						ProfilePictureWithoutFrame     interface{} `json:"profilePictureWithoutFrame"`
						ProfilePictureWithRingStatus   interface{} `json:"profilePictureWithRingStatus"`
						CompanyLogo                    interface{} `json:"companyLogo"`
						Icon                           interface{} `json:"icon"`
						SystemImage                    interface{} `json:"systemImage"`
						NonEntityGroupLogo             interface{} `json:"nonEntityGroupLogo"`
						VectorImage                    interface{} `json:"vectorImage"`
						NonEntityProfessionalEventLogo interface{} `json:"nonEntityProfessionalEventLogo"`
						ProfilePicture                 interface{} `json:"profilePicture"`
						ImageURL                       interface{} `json:"imageUrl"`
						ProfessionalEventLogo          interface{} `json:"professionalEventLogo"`
						NonEntityCompanyLogo           interface{} `json:"nonEntityCompanyLogo"`
						NonEntitySchoolLogo            interface{} `json:"nonEntitySchoolLogo"`
						GroupLogo                      interface{} `json:"groupLogo"`
						SchoolLogo                     interface{} `json:"schoolLogo"`
						GhostImage                     interface{} `json:"ghostImage"`
						NonEntityProfilePicture        struct {
							Profile     string      `json:"*profile"`
							RingStatus  interface{} `json:"ringStatus"`
							RecipeTypes []string    `json:"$recipeTypes"`
							VectorImage struct {
								DigitalmediaAsset interface{} `json:"digitalmediaAsset"`
								Attribution       interface{} `json:"attribution"`
								C2PaManifestData  interface{} `json:"c2paManifestData"`
								RecipeTypes       []string    `json:"$recipeTypes"`
								Artifacts         []struct {
									Width                         int      `json:"width"`
									RecipeTypes                   []string `json:"$recipeTypes"`
									FileIdentifyingURLPathSegment string   `json:"fileIdentifyingUrlPathSegment"`
									ExpiresAt                     int64    `json:"expiresAt"`
									Height                        int      `json:"height"`
									Type                          string   `json:"$type"`
								} `json:"artifacts"`
								RootURL string `json:"rootUrl"`
								Type    string `json:"$type"`
							} `json:"vectorImage"`
							Type string `json:"$type"`
						} `json:"nonEntityProfilePicture"`
					} `json:"detailData"`
					TintColor          interface{}   `json:"tintColor"`
					RecipeTypes        []string      `json:"$recipeTypes"`
					TapTargets         []interface{} `json:"tapTargets"`
					DisplayAspectRatio interface{}   `json:"displayAspectRatio"`
					Type               string        `json:"$type"`
				} `json:"attributes"`
				EditableAccessibilityText   bool          `json:"editableAccessibilityText"`
				ActionTarget                interface{}   `json:"actionTarget"`
				AccessibilityTextAttributes []interface{} `json:"accessibilityTextAttributes"`
				TotalCount                  interface{}   `json:"totalCount"`
				AccessibilityText           interface{}   `json:"accessibilityText"`
				RecipeTypes                 []string      `json:"$recipeTypes"`
				Type                        string        `json:"$type"`
			} `json:"image"`
			ConnectAction          interface{} `json:"connectAction"`
			SupplementaryActorInfo struct {
				TextDirection                 string        `json:"textDirection"`
				Text                          string        `json:"text"`
				AttributesV2                  []interface{} `json:"attributesV2"`
				AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
				AccessibilityText             string        `json:"accessibilityText"`
				RecipeTypes                   []string      `json:"$recipeTypes"`
				Type                          string        `json:"$type"`
			} `json:"supplementaryActorInfo"`
			Description struct {
				TextDirection                 string        `json:"textDirection"`
				Text                          string        `json:"text"`
				AttributesV2                  []interface{} `json:"attributesV2"`
				AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
				AccessibilityText             string        `json:"accessibilityText"`
				RecipeTypes                   []string      `json:"$recipeTypes"`
				Type                          string        `json:"$type"`
			} `json:"description"`
			BackendUrn   string   `json:"backendUrn"`
			RecipeTypes  []string `json:"$recipeTypes"`
			FollowAction struct {
				UnmuteTrackingActionType        interface{} `json:"unmuteTrackingActionType"`
				UnfollowTrackingActionType      string      `json:"unfollowTrackingActionType"`
				MuteTrackingActionType          interface{} `json:"muteTrackingActionType"`
				FollowTrackingActionType        string      `json:"followTrackingActionType"`
				CompanyFollowingTrackingContext interface{} `json:"companyFollowingTrackingContext"`
				Type                            string      `json:"type"`
				FollowingState                  string      `json:"*followingState"`
				RecipeTypes                     []string    `json:"$recipeTypes"`
			} `json:"followAction"`
			Type                 string      `json:"$type"`
			SubDescriptionButton interface{} `json:"subDescriptionButton"`
			Name                 struct {
				TextDirection string `json:"textDirection"`
				Text          string `json:"text"`
				AttributesV2  []struct {
					Length     int `json:"length"`
					Start      int `json:"start"`
					DetailData struct {
						JobPostingName          interface{} `json:"jobPostingName"`
						Hyperlink               interface{} `json:"hyperlink"`
						ProfileFamiliarName     interface{} `json:"profileFamiliarName"`
						Color                   interface{} `json:"color"`
						CompanyName             interface{} `json:"companyName"`
						ProfileFullName         string      `json:"*profileFullName"`
						Icon                    interface{} `json:"icon"`
						Epoch                   interface{} `json:"epoch"`
						SystemImage             interface{} `json:"systemImage"`
						TextLink                interface{} `json:"textLink"`
						ListItemStyle           interface{} `json:"listItemStyle"`
						GroupName               interface{} `json:"groupName"`
						HyperlinkOpenExternally interface{} `json:"hyperlinkOpenExternally"`
						ListStyle               interface{} `json:"listStyle"`
						StringFieldReference    interface{} `json:"stringFieldReference"`
						LearningCourseName      interface{} `json:"learningCourseName"`
						ProfileMention          interface{} `json:"profileMention"`
						Style                   interface{} `json:"style"`
						SchoolName              interface{} `json:"schoolName"`
						Hashtag                 interface{} `json:"hashtag"`
					} `json:"detailData"`
					RecipeTypes []string `json:"$recipeTypes"`
					Type        string   `json:"$type"`
				} `json:"attributesV2"`
				AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
				AccessibilityText             string        `json:"accessibilityText"`
				RecipeTypes                   []string      `json:"$recipeTypes"`
				Type                          string        `json:"$type"`
			} `json:"name"`
			SubDescription struct {
				TextDirection string `json:"textDirection"`
				Text          string `json:"text"`
				AttributesV2  []struct {
					Length     int `json:"length"`
					Start      int `json:"start"`
					DetailData struct {
						JobPostingName          interface{} `json:"jobPostingName"`
						Hyperlink               interface{} `json:"hyperlink"`
						ProfileFamiliarName     interface{} `json:"profileFamiliarName"`
						Color                   interface{} `json:"color"`
						CompanyName             interface{} `json:"companyName"`
						Icon                    string      `json:"icon"`
						Epoch                   interface{} `json:"epoch"`
						SystemImage             interface{} `json:"systemImage"`
						TextLink                interface{} `json:"textLink"`
						ListItemStyle           interface{} `json:"listItemStyle"`
						GroupName               interface{} `json:"groupName"`
						HyperlinkOpenExternally interface{} `json:"hyperlinkOpenExternally"`
						ListStyle               interface{} `json:"listStyle"`
						ProfileFullName         interface{} `json:"profileFullName"`
						StringFieldReference    interface{} `json:"stringFieldReference"`
						LearningCourseName      interface{} `json:"learningCourseName"`
						ProfileMention          interface{} `json:"profileMention"`
						Style                   interface{} `json:"style"`
						SchoolName              interface{} `json:"schoolName"`
						Hashtag                 interface{} `json:"hashtag"`
					} `json:"detailData"`
					RecipeTypes []string `json:"$recipeTypes"`
					Type        string   `json:"$type"`
				} `json:"attributesV2"`
				AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
				AccessibilityText             string        `json:"accessibilityText"`
				RecipeTypes                   []string      `json:"$recipeTypes"`
				Type                          string        `json:"$type"`
			} `json:"subDescription"`
			NavigationContext struct {
				ActionTarget           string      `json:"actionTarget"`
				URLViewingBehavior     string      `json:"urlViewingBehavior"`
				TrackingActionType     string      `json:"trackingActionType"`
				AccessibilityText      string      `json:"accessibilityText"`
				SponsoredURLAttributes interface{} `json:"sponsoredUrlAttributes"`
				RecipeTypes            []string    `json:"$recipeTypes"`
				Type                   string      `json:"$type"`
			} `json:"navigationContext"`
			RingStatus                   interface{} `json:"ringStatus"`
			GroupMembershipForJoinAction interface{} `json:"groupMembershipForJoinAction"`
			ShowSmallActorPortrait       bool        `json:"showSmallActorPortrait"`
		} `json:"actor,omitempty"`
		BoostHeader         interface{}   `json:"boostHeader,omitempty"`
		SocialDetail        string        `json:"*socialDetail,omitempty"`
		Header              interface{}   `json:"header,omitempty"`
		HighlightedComments []interface{} `json:"highlightedComments,omitempty"`
		Commentary          struct {
			NumLines          int         `json:"numLines"`
			Translation       interface{} `json:"translation"`
			NavigationContext interface{} `json:"navigationContext"`
			MetadataText      interface{} `json:"metadataText"`
			Text              struct {
				TextDirection string `json:"textDirection"`
				Text          string `json:"text"`
				AttributesV2  []struct {
					Length     int `json:"length"`
					Start      int `json:"start"`
					DetailData struct {
						JobPostingName          interface{} `json:"jobPostingName"`
						Hyperlink               interface{} `json:"hyperlink"`
						ProfileFamiliarName     interface{} `json:"profileFamiliarName"`
						Color                   interface{} `json:"color"`
						CompanyName             interface{} `json:"companyName"`
						Hashtag                 string      `json:"*hashtag"`
						Icon                    interface{} `json:"icon"`
						Epoch                   interface{} `json:"epoch"`
						SystemImage             interface{} `json:"systemImage"`
						TextLink                interface{} `json:"textLink"`
						ListItemStyle           interface{} `json:"listItemStyle"`
						GroupName               interface{} `json:"groupName"`
						HyperlinkOpenExternally interface{} `json:"hyperlinkOpenExternally"`
						ListStyle               interface{} `json:"listStyle"`
						ProfileFullName         interface{} `json:"profileFullName"`
						StringFieldReference    interface{} `json:"stringFieldReference"`
						LearningCourseName      interface{} `json:"learningCourseName"`
						ProfileMention          interface{} `json:"profileMention"`
						Style                   interface{} `json:"style"`
						SchoolName              interface{} `json:"schoolName"`
					} `json:"detailData"`
					RecipeTypes []string `json:"$recipeTypes"`
					Type        string   `json:"$type"`
				} `json:"attributesV2"`
				AccessibilityTextAttributesV2 []interface{} `json:"accessibilityTextAttributesV2"`
				AccessibilityText             interface{}   `json:"accessibilityText"`
				RecipeTypes                   []string      `json:"$recipeTypes"`
				Type                          string        `json:"$type"`
			} `json:"text"`
			RecipeTypes []string `json:"$recipeTypes"`
			Type        string   `json:"$type"`
		} `json:"commentary,omitempty"`
		AdditionalContents                []interface{} `json:"additionalContents,omitempty"`
		FirstName                         string        `json:"firstName,omitempty"`
		LastName                          string        `json:"lastName,omitempty"`
		PublicIdentifier                  string        `json:"publicIdentifier,omitempty"`
		Name                              string        `json:"name,omitempty"`
		URL                               string        `json:"url,omitempty"`
		HideSocialCountsIfAllowed         bool          `json:"hideSocialCountsIfAllowed,omitempty"`
		ThreadUrn                         string        `json:"threadUrn,omitempty"`
		TotalSocialActivityCounts         string        `json:"*totalSocialActivityCounts,omitempty"`
		QuickComments                     []interface{} `json:"quickComments,omitempty"`
		SocialPermissionsPersonalTopicUrn interface{}   `json:"socialPermissionsPersonalTopicUrn,omitempty"`
		ShowPremiumAnalytics              bool          `json:"showPremiumAnalytics,omitempty"`
		SocialPermissions                 string        `json:"*socialPermissions,omitempty"`
		FeedDetailSocialActionPromptType  interface{}   `json:"feedDetailSocialActionPromptType,omitempty"`
		AllowedCommentersScope            string        `json:"allowedCommentersScope,omitempty"`
		ReactionsOnCommentsTopicUrn       interface{}   `json:"reactionsOnCommentsTopicUrn,omitempty"`
		SocialUpdateType                  interface{}   `json:"socialUpdateType,omitempty"`
		ReactionSummariesTopicUrn         interface{}   `json:"reactionSummariesTopicUrn,omitempty"`
		CommentsTopicUrn                  interface{}   `json:"commentsTopicUrn,omitempty"`
		ReactionsTopicUrn                 interface{}   `json:"reactionsTopicUrn,omitempty"`
		ReshareUpdateUrn                  interface{}   `json:"reshareUpdateUrn,omitempty"`
		SocialDetailsTopicUrn             interface{}   `json:"socialDetailsTopicUrn,omitempty"`
		CommentSocialPermissionsTopicUrn  interface{}   `json:"commentSocialPermissionsTopicUrn,omitempty"`
		MessagePermission                 string        `json:"messagePermission,omitempty"`
		CanReact                          bool          `json:"canReact,omitempty"`
		CanShare                          bool          `json:"canShare,omitempty"`
		CanPostComments                   bool          `json:"canPostComments,omitempty"`
	} `json:"included"`
}
